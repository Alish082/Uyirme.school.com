import { UserButton } from "@clerk/nextjs";
import Head from "next/head";

import { TextInput, Checkbox, Button, Group, Box, Select, MultiSelect, Modal, Container} from "@mantine/core";
import { useForm } from "@mantine/form";
import { api } from "~/utils/api";
import { text } from "stream/consumers";
import { BarChart } from '@mantine/charts';
import { data } from './data';
import { useState } from "react";
import { useDisclosure } from "@mantine/hooks";



export default function Home() {
  const form = useForm({
    initialValues: {
      location: "",
      desired_format: "offline",
      age_format: "",
      day_format: [] as string[],
      time_format:[] as string[],
      skills:[] as string[]
    },

    validate: {},
  });
  const createSurvey = api.post.create.useMutation();
  const query = api.post.stats.useQuery();
const [searchValue, SetsearchValue] = useState<string>("")
const [opened, { open, close }] = useDisclosure(false);

  return (
    <>
      <Head>
        <title>Uyirme</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="shortcut icon" type="image/png" href="img/favicon.png" />

      </Head>
      <Modal 
       opened={opened}
       onClose={close}>
      <Box maw={340} mx="auto">
            <form
              onSubmit={form.onSubmit((values) => {
                createSurvey.mutate({
                  survey: {
                    desired_skills: values.skills,
                    age_group: values.age_format,
                    location: values.location,
                    preferred_format: values.desired_format,
                    preferred_days: values.day_format,
                    preferred_time: values.time_format,
                  },
                });
              })}
            >
              
              
              <TextInput
                withAsterisk
                label="Location"
                placeholder="ZhezBIL"
                {...form.getInputProps("location")}
              />
              <MultiSelect
                label="What kind of activities do you like?"
                searchable
                placeholder="Pick value"
                data={['Vocals', 'BOX', 'Football', 'Voleyball','Basketball','Programming','Piano','Dombyra','Wrestling','Workout','Painting','Chess']}
                {...form.getInputProps("skills")}
                searchValue={searchValue}
                onSearchChange={SetsearchValue}
                nothingFoundMessage={<Button onClick={()=> {
                  form.setValues({
                    skills: [...form.values.skills, searchValue]
                  })
                  SetsearchValue("")
                }}>Add to skills</Button>}
              />
              <Select
                label="online/offline"
                placeholder="Pick value"
                data={['online', 'offline']}
                {...form.getInputProps("desired_format")}
              />
              <Select
                label="Age_group"
                placeholder="Pick value"
                data={['11-12', '13-14', '15-17']}
                {...form.getInputProps("age_format")}
              />
               <MultiSelect 
                  label="Prefered days"
                  placeholder="Pick value"
                  data={['Monday', 'Tuesday', 'Wednesday', 'Thuresday' , 'Friday' , 'Saterday' , 'Sunday']}
                  defaultValue={['Monday']}
                  clearable
                  {...form.getInputProps("day_format")}
              />
              <MultiSelect 
                  label="Prefered time"
                  placeholder="Pick value"
                  data={['9:00-11:00', '14:00-16:00', '16:00-18:00', '21:00-22:00']}
                  defaultValue={['9:00-11:00']}
                  clearable
                  {...form.getInputProps("time_format")}
              />
              
          
              <Group justify="flex-end" mt="md">
                <Button type="submit">Submit</Button>
              </Group>
            </form>
          </Box>
      </Modal>
      <header >
        <Container>
        <Group justify="space-between" py={"sm"}>
        <img src="/favicon.png"></img>
          <Group>
          <Button onClick={()=> open()}>Open</Button>
      <UserButton />
          </Group>
      
        </Group>
        </Container>
      </header>
      <main className="min-h-screen bg-[#00000]">
        <Container pt={"xl"}>
        {
          query.isSuccess ? (
            <BarChart
                h={300}
                data={query.data.data}
                dataKey="name"
                series={[
                  { name: 'online', color: '#FFB608' },
                  { name: 'offline', color: 'teal.6' },
                ]}
                tickLine="y"
                type="stacked"
               />
          ) : <></>
        }
        </Container>
          
      </main>
    </>
  );
}
